package com.yuanmaxinxi.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

/**
 * 当前项目的基本数据工具类
 * @author HOME
 *1.创建  t_user,t_borrower,t_content
 *2.t_user表添加一条基础数据 账号admin   密码:useradmin9527
 */
public class DBUtil {
	private static Connection conn;
	static{
		try {
			Class.forName("org.apache.derby.jdbc.AutoloadedDriver");
			conn = DriverManager.getConnection("jdbc:derby:C:/Users/Administrator/Desktop/database/repayment;create=true;");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
//		createUser();
//		insertUser();
		createSms();
//		insertPersonType(1L, "借款人");
//		insertPersonType(2L, "紧联人");
//		insertPersonType(3L, "担保人");
//		insertPersonType(4L, "出借人");
//		createContent();
		
//		createPerson();
//		createBorrower_Person();
//		createPersonType();
//		createBorrower();
	}
	public static void createSms() {
		try {
			String sql = "CREATE TABLE t_sms (\r\n" + 
					"  id bigint NOT NULL generated by default as identity,\r\n" + 
					"  name varchar(255) NOT NULL,\r\n" + 
					"  phone varchar(255) NOT NULL,\r\n" + 
					"  sendTime TIMESTAMP NOT NULL," + 
					"  brrId bigint," + 
					"  content varchar(255) NOT NULL," + 
					"  status int NOT NULL," + 
					"  PRIMARY KEY (id)\r\n" + 
					")";
//			sql = "drop table t_sms";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void createContent() {
		try {
			String sql = "CREATE TABLE t_content (\r\n" + 
			"  id bigint NOT NULL generated by default as identity,\r\n" + 
			"  title varchar(255) NOT NULL,\r\n" + 
			"  content varchar(255) NOT NULL,\r\n" + 
			"  defaultUse int NOT NULL," + 
			"  PRIMARY KEY (id)\r\n" + 
			")";
//			sql = "drop table t_content";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void createBorrower() {
		try {
			String sql = "CREATE TABLE t_borrower (\r\n" + 
			"  id bigint NOT NULL generated by default as identity,\r\n" + 
			"  name varchar(255) DEFAULT NULL,\r\n" + 
			"  phone varchar(255) NOT NULL,\r\n" + 
			"  name11 varchar(255),\r\n" + 
			"  phone11 varchar(255),\r\n" + 
			"  name12 varchar(255),\r\n" + 
			"  phone12 varchar(255),\r\n" + 
			"  name21 varchar(255),\r\n" + 
			"  phone21 varchar(255),\r\n" + 
			"  name22 varchar(255) ,\r\n" + 
			"  phone22 varchar(255),\r\n" + 
			"  name23 varchar(255),\r\n" + 
			"  phone23 varchar(255),\r\n" + 
			"  loanTime date NOT NULL,\r\n" + 
			"  repaymentTime date NOT NULL," + 
			"  number varchar(255) NOT NULL," + 
			"  remark varchar(255)," + 
			"  PRIMARY KEY (id)\r\n" + 
			")";
//			sql = "drop table t_borrower";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void createUser() {
		try {
			String sql = "CREATE TABLE t_user (\r\n" + 
			"  id bigint NOT NULL generated by default as identity,\r\n" + 
			"  username varchar(12) NOT NULL,\r\n" + 
			"  password varchar(100) NOT NULL,\r\n" + 
			"  phone varchar(100) NOT NULL,\r\n" + 
			"  PRIMARY KEY (id)\r\n" + 
			")";
//			sql = "drop table t_user";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void insertUser() {
		try {
			String sql = "insert into t_user(username,password,phone)values(?,?,?)";
			PreparedStatement state = conn.prepareStatement(sql);
			state.setObject(1, "admin");
			state.setObject(2,MD5Util.encode("useradmin9527"));
			state.setObject(3,"15181950314");
			state.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void createPerson() {
		try {
			String sql = "CREATE TABLE t_person (\r\n" + 
			"  id bigint NOT NULL generated by default as identity,\r\n" + 
			"  name varchar(12) NOT NULL,\r\n" + 
			"  phone varchar(100) NOT NULL,\r\n" + 
			"  remark varchar(255) NOT NULL,\r\n" + 
			"  typeId bigint NOT NULL,\r\n" + 
			"  PRIMARY KEY (id)\r\n" + 
			")";
			sql = "drop table t_person";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 借款人跟 其他类别人员的多对多表
	 */
	public static void createBorrower_Person() {
		try {
			String sql = "CREATE TABLE t_borrower_person (\r\n" + 
					"  bId bigint NOT NULL,\r\n" + 
					"  pId bigint NOT NULL\r\n" + 
					")";
			sql = "drop table t_borrower_person";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void createPersonType() {
		try {
			String sql = "CREATE TABLE t_personType (\r\n" + 
			"  id bigint NOT NULL generated by default as identity,\r\n" + 
			"  name varchar(12) NOT NULL,\r\n" + 
			"  PRIMARY KEY (id)\r\n" + 
			")";
			sql = "drop table t_personType";
			PreparedStatement state = conn.prepareStatement(sql);
			state.execute();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	public static void insertPersonType(Long id,String name) {
		try {
			String sql = "insert into t_personType(id,name)values(?,?)";
			PreparedStatement state = conn.prepareStatement(sql);
			state.setObject(1, id);
			state.setObject(2,name);
			state.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
